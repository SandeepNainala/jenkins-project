pipeline {

  agent {
    docker {
      image 'sandeepnainala9/maven-sandeep-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
  }
    }
  options {
    ansiColor('xterm')
  }

  stages{
    stage ('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/SandeepNainala/jenkins-project.git'
      }
    }
    stage ('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage ('Static code Analysis') {
      environment {
        SONAR_URL = 'http://44.204.183.51:9000'
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd -maven-sonar-argocd-helm-k8s/spring-boot-app $$ mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
  }